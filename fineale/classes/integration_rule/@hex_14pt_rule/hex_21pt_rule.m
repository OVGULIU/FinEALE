% Class of a special six-point hexahedron quadrature rule.
%
% Parameters:
%      none.
% 
% The integration scheme is based on the paper
% Sauer G (1999) Alternative reduced integration avoiding spurious modes for 8-node quadrilateral and 20-node hexahedron finite elements. Forschung Im Ingenieurwesen-Engineering Research 65: 131-135.
%
classdef hex_21pt_rule
    
    properties
        del=sqrt(2/3);
        rh=  1/sqrt(3);
        %
        param_coords = [...
        [-rh,-rh,-rh];...
        [+rh,-rh,-rh];...
        [+rh,+rh,-rh];...
        [-rh,+rh,-rh];...
        [-rh,-rh,-rh];...
        [+rh,-rh,-rh];...
        [+rh,+rh,-rh];...
        [-rh,+rh,-rh];...
        [0,+del,+del];...
        [0,+del,-del];...
        [0,-del,+del];...
        [0,-del,-del];...
        [+del,0,+del];...
        [+del,0,-del];...
        [-del,0,+del];...
        [-del,0,-del];...
        [+del,+del,0];...
        [+del,-del,0];...
        [-del,+del,0];...
        [-del,-del,0];...
        [0,0,0];...%21
        ];
        weights = [387/395*ones(1,8),4/395*ones(1,12),16/395];
    end
    
    methods
        
        function self = hex_14pt_rule (Parameters)
            self.param_coords = ...
                [self.a*[-1, -1, -1];...
                self.a*[+1, -1, -1];...
                self.a*[+1, +1, -1];...
                self.a*[-1, +1, -1];...
                self.a*[-1, -1, +1];...
                self.a*[+1, -1, +1];...
                self.a*[+1, +1, +1];...
                self.a*[-1, +1, +1];...
                self.b*[-1, 0, 0];...
                self.b*[+1, 0, 0];...
                self.b*[0, -1, 0];...
                self.b*[0, +1, 0];...
                self.b*[0, 0, -1];...
                self.b*[0, 0, +1];...
                ];
            self.weights =[self.Wa*ones(1,8),self.Wb*ones(1,6)];
        end
        
        % Get the number of quadrature points of the rule
        function val= npts (self)
            val = length(self.weights);
        end
        
        % Get the weights of quadrature points of the rule
        function val= get.weights (self)
            val = self.weights;
        end
        
        % Get the parametric coordinates of quadrature points of the rule
        function val= get.param_coords (self)
            val = self.param_coords;
        end
        
    end
    
end
