% Test generation  from general hexahedra merged together.
x0= 0;
x1=x0+5;
x2=x1+10;
x3=x2+10;
x4=x3+10;
y0=0;
y4=240;
y3=y4-10;
y2=y3-10;
y1=y2-10;
t=2;
h=2;
z0=0;
z3=2*t+h;
z2=z3-t;
z1=z2-h;
m1=2;
m2=2;
m3=2;
m4=3;
n1=20;
n2=4;
n3=2;
n4=2;
n5=7;
p1=1;
p2=2;
p3=1;
[fens,fes] = H8_hexahedron([x1,y0,z0;x2,y1,z1],m2,n1,p1);
[fens1,fes1] = H8_hexahedron([x1,y1,z0;x2,y2,z1],m2,n2,p1);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x0,y1,z0;x1,y2,z1],m1,n2,p1);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x0,y1,z1;x1,y2,z2],m1,n2,p2);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x0,y1,z2;x1,y2,z3],m1,n2,p3);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x0,y2,z2;x1,y3,z3],m1,n3,p3);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x0,y3,z2;x1,y4,z3],m1,n4,p3);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x1,y3,z2;x3,y4,z3],m4,n4,p3);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x3,y3,z2;x4,y4,z3],m3,n4,p3);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
[fens1,fes1] = H8_hexahedron([x3,y0,z2;x4,y3,z3],m3,n5,p3);
[fens,fes1,fes2] = merge_meshes(fens1, fes1, fens, fes, eps);
fes= cat(fes1,fes2);
% drawmesh({fens,fes},'fes','nodes','facecolor','red')
gv=drawmesh({fens,fes},'fes','facecolor','red','facealpha',0.5,'shrink',0.8,'edgecolor','none');
interact(gv);

assignin('caller','fineale_test_passed',((norm([112,8]-size(fes.conn)))<1e-12))